/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var vbs = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"primary_expression":3,"IDENTIFIER":4,"NUMBER":5,"STR_CONST":6,"(":7,"expression":8,")":9,"TRUE":10,"FALSE":11,"script":12,"statement_list":13,"EOF":14,"else_if_clause":15,"else_clause":16,"ELSEIF":17,"THEN":18,"ELSE":19,"case_list":20,"CASE":21,"selection_statement":22,"IF":23,"END":24,"SELECT":25,"statement":26,"dim_statement":27,"DIM":28,"argument_expression_list":29,"assignment_expression":30,"logical_or_expression":31,"unary_expression":32,"=":33,"logical_and_expression":34,"OR":35,"equality_expression":36,"AND":37,"relational_expression":38,"NE_OP":39,"additive_expression":40,"<":41,">":42,"LE_OP":43,"GE_OP":44,"cast_expression":45,"multiplicative_expression":46,"*":47,"/":48,"%":49,"+":50,"-":51,"&":52,"postfix_expression":53,".":54,",":55,"do_statement":56,"DO":57,"WHILE":58,"LOOP":59,"UNTIL":60,"iteration_statement":61,"FOR":62,"TO":63,"NEXT":64,"WEND":65,"jump_statement":66,"EXIT":67,"FUNCTION":68,"expression_statement":69,"access_modifier":70,"PUBLIC":71,"PRIVATE":72,"function_definition":73,"SUB":74,"OPTION":75,"EXPLICIT":76,"NEWLINE":77,"$accept":0,"$end":1},
terminals_: {2:"error",4:"IDENTIFIER",5:"NUMBER",6:"STR_CONST",7:"(",9:")",10:"TRUE",11:"FALSE",14:"EOF",17:"ELSEIF",18:"THEN",19:"ELSE",21:"CASE",23:"IF",24:"END",25:"SELECT",28:"DIM",33:"=",35:"OR",37:"AND",39:"NE_OP",41:"<",42:">",43:"LE_OP",44:"GE_OP",47:"*",48:"/",49:"%",50:"+",51:"-",52:"&",54:".",55:",",57:"DO",58:"WHILE",59:"LOOP",60:"UNTIL",62:"FOR",63:"TO",64:"NEXT",65:"WEND",67:"EXIT",68:"FUNCTION",71:"PUBLIC",72:"PRIVATE",74:"SUB",75:"OPTION",76:"EXPLICIT",77:"NEWLINE"},
productions_: [0,[3,1],[3,1],[3,1],[3,3],[3,1],[3,1],[12,2],[15,1],[15,4],[15,5],[16,2],[20,3],[20,4],[20,4],[22,6],[22,7],[22,6],[13,1],[13,2],[27,2],[8,1],[30,1],[30,3],[31,1],[31,3],[34,1],[34,3],[36,1],[36,3],[36,3],[38,1],[38,3],[38,3],[38,3],[38,3],[45,1],[46,1],[46,3],[46,3],[46,3],[40,1],[40,3],[40,3],[40,3],[32,1],[53,1],[53,3],[53,4],[53,2],[53,3],[29,1],[29,3],[56,4],[56,5],[56,5],[56,4],[56,2],[56,5],[56,5],[61,6],[61,4],[61,3],[61,1],[66,2],[66,2],[66,2],[69,1],[70,1],[70,1],[73,8],[73,8],[73,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,2],[26,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
}
},
table: [{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],12:1,13:2,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{1:[3]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],14:[1,43],22:6,23:[1,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,18],5:[2,18],6:[2,18],7:[2,18],10:[2,18],11:[2,18],14:[2,18],17:[2,18],19:[2,18],21:[2,18],23:[2,18],24:[2,18],25:[2,18],28:[2,18],57:[2,18],58:[2,18],59:[2,18],62:[2,18],64:[2,18],65:[2,18],67:[2,18],68:[2,18],71:[2,18],72:[2,18],74:[2,18],75:[2,18],77:[2,18]},{4:[2,73],5:[2,73],6:[2,73],7:[2,73],10:[2,73],11:[2,73],14:[2,73],17:[2,73],19:[2,73],21:[2,73],23:[2,73],24:[2,73],25:[2,73],28:[2,73],57:[2,73],58:[2,73],59:[2,73],62:[2,73],64:[2,73],65:[2,73],67:[2,73],68:[2,73],71:[2,73],72:[2,73],74:[2,73],75:[2,73],77:[2,73]},{4:[2,74],5:[2,74],6:[2,74],7:[2,74],10:[2,74],11:[2,74],14:[2,74],17:[2,74],19:[2,74],21:[2,74],23:[2,74],24:[2,74],25:[2,74],28:[2,74],57:[2,74],58:[2,74],59:[2,74],62:[2,74],64:[2,74],65:[2,74],67:[2,74],68:[2,74],71:[2,74],72:[2,74],74:[2,74],75:[2,74],77:[2,74]},{4:[2,75],5:[2,75],6:[2,75],7:[2,75],10:[2,75],11:[2,75],14:[2,75],17:[2,75],19:[2,75],21:[2,75],23:[2,75],24:[2,75],25:[2,75],28:[2,75],57:[2,75],58:[2,75],59:[2,75],62:[2,75],64:[2,75],65:[2,75],67:[2,75],68:[2,75],71:[2,75],72:[2,75],74:[2,75],75:[2,75],77:[2,75]},{4:[2,76],5:[2,76],6:[2,76],7:[2,76],10:[2,76],11:[2,76],14:[2,76],17:[2,76],19:[2,76],21:[2,76],23:[2,76],24:[2,76],25:[2,76],28:[2,76],57:[2,76],58:[2,76],59:[2,76],62:[2,76],64:[2,76],65:[2,76],67:[2,76],68:[2,76],71:[2,76],72:[2,76],74:[2,76],75:[2,76],77:[2,76]},{4:[2,77],5:[2,77],6:[2,77],7:[2,77],10:[2,77],11:[2,77],14:[2,77],17:[2,77],19:[2,77],21:[2,77],23:[2,77],24:[2,77],25:[2,77],28:[2,77],57:[2,77],58:[2,77],59:[2,77],62:[2,77],64:[2,77],65:[2,77],67:[2,77],68:[2,77],71:[2,77],72:[2,77],74:[2,77],75:[2,77],77:[2,77]},{4:[2,78],5:[2,78],6:[2,78],7:[2,78],10:[2,78],11:[2,78],14:[2,78],17:[2,78],19:[2,78],21:[2,78],23:[2,78],24:[2,78],25:[2,78],28:[2,78],57:[2,78],58:[2,78],59:[2,78],62:[2,78],64:[2,78],65:[2,78],67:[2,78],68:[2,78],71:[2,78],72:[2,78],74:[2,78],75:[2,78],77:[2,78]},{76:[1,45]},{4:[2,80],5:[2,80],6:[2,80],7:[2,80],10:[2,80],11:[2,80],14:[2,80],17:[2,80],19:[2,80],21:[2,80],23:[2,80],24:[2,80],25:[2,80],28:[2,80],57:[2,80],58:[2,80],59:[2,80],62:[2,80],64:[2,80],65:[2,80],67:[2,80],68:[2,80],71:[2,80],72:[2,80],74:[2,80],75:[2,80],77:[2,80]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],29:46,30:47,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{4:[2,67],5:[2,67],6:[2,67],7:[2,67],10:[2,67],11:[2,67],14:[2,67],17:[2,67],19:[2,67],21:[2,67],23:[2,67],24:[2,67],25:[2,67],28:[2,67],57:[2,67],58:[2,67],59:[2,67],62:[2,67],64:[2,67],65:[2,67],67:[2,67],68:[2,67],71:[2,67],72:[2,67],74:[2,67],75:[2,67],77:[2,67]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:48,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{21:[1,49]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:50,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:51,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{4:[2,63],5:[2,63],6:[2,63],7:[2,63],10:[2,63],11:[2,63],14:[2,63],17:[2,63],19:[2,63],21:[2,63],23:[2,63],24:[2,63],25:[2,63],28:[2,63],57:[2,63],58:[2,63],59:[2,63],62:[2,63],64:[2,63],65:[2,63],67:[2,63],68:[2,63],71:[2,63],72:[2,63],74:[2,63],75:[2,63],77:[2,63]},{57:[1,52],62:[1,54],68:[1,53]},{4:[1,55]},{4:[1,56]},{68:[1,20],70:22,71:[1,25],72:[1,26],73:57,74:[1,21]},{4:[2,21],5:[2,21],6:[2,21],7:[2,21],9:[2,21],10:[2,21],11:[2,21],14:[2,21],17:[2,21],18:[2,21],19:[2,21],21:[2,21],23:[2,21],24:[2,21],25:[2,21],28:[2,21],57:[2,21],58:[2,21],59:[2,21],62:[2,21],63:[2,21],64:[2,21],65:[2,21],67:[2,21],68:[2,21],71:[2,21],72:[2,21],74:[2,21],75:[2,21],77:[2,21]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:61,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,58],59:[1,60],60:[1,59],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{68:[2,68],71:[2,68],72:[2,68],74:[2,68]},{68:[2,69],71:[2,69],72:[2,69],74:[2,69]},{4:[2,22],5:[2,22],6:[2,22],7:[2,22],9:[2,22],10:[2,22],11:[2,22],14:[2,22],17:[2,22],18:[2,22],19:[2,22],21:[2,22],23:[2,22],24:[2,22],25:[2,22],28:[2,22],33:[2,22],35:[1,62],37:[2,22],39:[2,22],41:[2,22],42:[2,22],43:[2,22],44:[2,22],47:[2,22],48:[2,22],49:[2,22],50:[2,22],51:[2,22],52:[2,22],54:[2,22],55:[2,22],57:[2,22],58:[2,22],59:[2,22],62:[2,22],63:[2,22],64:[2,22],65:[2,22],67:[2,22],68:[2,22],71:[2,22],72:[2,22],74:[2,22],75:[2,22],77:[2,22]},{4:[2,36],5:[2,36],6:[2,36],7:[2,36],9:[2,36],10:[2,36],11:[2,36],14:[2,36],17:[2,36],18:[2,36],19:[2,36],21:[2,36],23:[2,36],24:[2,36],25:[2,36],28:[2,36],33:[1,63],35:[2,36],37:[2,36],39:[2,36],41:[2,36],42:[2,36],43:[2,36],44:[2,36],47:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],54:[2,36],55:[2,36],57:[2,36],58:[2,36],59:[2,36],62:[2,36],63:[2,36],64:[2,36],65:[2,36],67:[2,36],68:[2,36],71:[2,36],72:[2,36],74:[2,36],75:[2,36],77:[2,36]},{4:[2,24],5:[2,24],6:[2,24],7:[2,24],9:[2,24],10:[2,24],11:[2,24],14:[2,24],17:[2,24],18:[2,24],19:[2,24],21:[2,24],23:[2,24],24:[2,24],25:[2,24],28:[2,24],33:[2,24],35:[2,24],37:[1,64],39:[2,24],41:[2,24],42:[2,24],43:[2,24],44:[2,24],47:[2,24],48:[2,24],49:[2,24],50:[2,24],51:[2,24],52:[2,24],54:[2,24],55:[2,24],57:[2,24],58:[2,24],59:[2,24],62:[2,24],63:[2,24],64:[2,24],65:[2,24],67:[2,24],68:[2,24],71:[2,24],72:[2,24],74:[2,24],75:[2,24],77:[2,24]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,65],9:[2,45],10:[1,38],11:[1,39],14:[2,45],17:[2,45],18:[2,45],19:[2,45],21:[2,45],23:[2,45],24:[2,45],25:[2,45],28:[2,45],29:66,30:47,31:27,32:28,33:[2,45],34:29,35:[2,45],36:31,37:[2,45],38:33,39:[2,45],40:40,41:[2,45],42:[2,45],43:[2,45],44:[2,45],45:42,46:41,47:[2,45],48:[2,45],49:[2,45],50:[2,45],51:[2,45],52:[2,45],53:30,54:[1,67],55:[2,45],57:[2,45],58:[2,45],59:[2,45],62:[2,45],63:[2,45],64:[2,45],65:[2,45],67:[2,45],68:[2,45],71:[2,45],72:[2,45],74:[2,45],75:[2,45],77:[2,45]},{4:[2,26],5:[2,26],6:[2,26],7:[2,26],9:[2,26],10:[2,26],11:[2,26],14:[2,26],17:[2,26],18:[2,26],19:[2,26],21:[2,26],23:[2,26],24:[2,26],25:[2,26],28:[2,26],33:[1,68],35:[2,26],37:[2,26],39:[1,69],41:[2,26],42:[2,26],43:[2,26],44:[2,26],47:[2,26],48:[2,26],49:[2,26],50:[2,26],51:[2,26],52:[2,26],54:[2,26],55:[2,26],57:[2,26],58:[2,26],59:[2,26],62:[2,26],63:[2,26],64:[2,26],65:[2,26],67:[2,26],68:[2,26],71:[2,26],72:[2,26],74:[2,26],75:[2,26],77:[2,26]},{4:[2,46],5:[2,46],6:[2,46],7:[2,46],9:[2,46],10:[2,46],11:[2,46],14:[2,46],17:[2,46],18:[2,46],19:[2,46],21:[2,46],23:[2,46],24:[2,46],25:[2,46],28:[2,46],33:[2,46],35:[2,46],37:[2,46],39:[2,46],41:[2,46],42:[2,46],43:[2,46],44:[2,46],47:[2,46],48:[2,46],49:[2,46],50:[2,46],51:[2,46],52:[2,46],54:[2,46],55:[2,46],57:[2,46],58:[2,46],59:[2,46],62:[2,46],63:[2,46],64:[2,46],65:[2,46],67:[2,46],68:[2,46],71:[2,46],72:[2,46],74:[2,46],75:[2,46],77:[2,46]},{4:[2,28],5:[2,28],6:[2,28],7:[2,28],9:[2,28],10:[2,28],11:[2,28],14:[2,28],17:[2,28],18:[2,28],19:[2,28],21:[2,28],23:[2,28],24:[2,28],25:[2,28],28:[2,28],33:[2,28],35:[2,28],37:[2,28],39:[2,28],41:[1,70],42:[1,71],43:[1,72],44:[1,73],47:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],54:[2,28],55:[2,28],57:[2,28],58:[2,28],59:[2,28],62:[2,28],63:[2,28],64:[2,28],65:[2,28],67:[2,28],68:[2,28],71:[2,28],72:[2,28],74:[2,28],75:[2,28],77:[2,28]},{4:[2,1],5:[2,1],6:[2,1],7:[2,1],9:[2,1],10:[2,1],11:[2,1],14:[2,1],17:[2,1],18:[2,1],19:[2,1],21:[2,1],23:[2,1],24:[2,1],25:[2,1],28:[2,1],33:[2,1],35:[2,1],37:[2,1],39:[2,1],41:[2,1],42:[2,1],43:[2,1],44:[2,1],47:[2,1],48:[2,1],49:[2,1],50:[2,1],51:[2,1],52:[2,1],54:[2,1],55:[2,1],57:[2,1],58:[2,1],59:[2,1],62:[2,1],63:[2,1],64:[2,1],65:[2,1],67:[2,1],68:[2,1],71:[2,1],72:[2,1],74:[2,1],75:[2,1],77:[2,1]},{4:[2,2],5:[2,2],6:[2,2],7:[2,2],9:[2,2],10:[2,2],11:[2,2],14:[2,2],17:[2,2],18:[2,2],19:[2,2],21:[2,2],23:[2,2],24:[2,2],25:[2,2],28:[2,2],33:[2,2],35:[2,2],37:[2,2],39:[2,2],41:[2,2],42:[2,2],43:[2,2],44:[2,2],47:[2,2],48:[2,2],49:[2,2],50:[2,2],51:[2,2],52:[2,2],54:[2,2],55:[2,2],57:[2,2],58:[2,2],59:[2,2],62:[2,2],63:[2,2],64:[2,2],65:[2,2],67:[2,2],68:[2,2],71:[2,2],72:[2,2],74:[2,2],75:[2,2],77:[2,2]},{4:[2,3],5:[2,3],6:[2,3],7:[2,3],9:[2,3],10:[2,3],11:[2,3],14:[2,3],17:[2,3],18:[2,3],19:[2,3],21:[2,3],23:[2,3],24:[2,3],25:[2,3],28:[2,3],33:[2,3],35:[2,3],37:[2,3],39:[2,3],41:[2,3],42:[2,3],43:[2,3],44:[2,3],47:[2,3],48:[2,3],49:[2,3],50:[2,3],51:[2,3],52:[2,3],54:[2,3],55:[2,3],57:[2,3],58:[2,3],59:[2,3],62:[2,3],63:[2,3],64:[2,3],65:[2,3],67:[2,3],68:[2,3],71:[2,3],72:[2,3],74:[2,3],75:[2,3],77:[2,3]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:74,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{4:[2,5],5:[2,5],6:[2,5],7:[2,5],9:[2,5],10:[2,5],11:[2,5],14:[2,5],17:[2,5],18:[2,5],19:[2,5],21:[2,5],23:[2,5],24:[2,5],25:[2,5],28:[2,5],33:[2,5],35:[2,5],37:[2,5],39:[2,5],41:[2,5],42:[2,5],43:[2,5],44:[2,5],47:[2,5],48:[2,5],49:[2,5],50:[2,5],51:[2,5],52:[2,5],54:[2,5],55:[2,5],57:[2,5],58:[2,5],59:[2,5],62:[2,5],63:[2,5],64:[2,5],65:[2,5],67:[2,5],68:[2,5],71:[2,5],72:[2,5],74:[2,5],75:[2,5],77:[2,5]},{4:[2,6],5:[2,6],6:[2,6],7:[2,6],9:[2,6],10:[2,6],11:[2,6],14:[2,6],17:[2,6],18:[2,6],19:[2,6],21:[2,6],23:[2,6],24:[2,6],25:[2,6],28:[2,6],33:[2,6],35:[2,6],37:[2,6],39:[2,6],41:[2,6],42:[2,6],43:[2,6],44:[2,6],47:[2,6],48:[2,6],49:[2,6],50:[2,6],51:[2,6],52:[2,6],54:[2,6],55:[2,6],57:[2,6],58:[2,6],59:[2,6],62:[2,6],63:[2,6],64:[2,6],65:[2,6],67:[2,6],68:[2,6],71:[2,6],72:[2,6],74:[2,6],75:[2,6],77:[2,6]},{4:[2,31],5:[2,31],6:[2,31],7:[2,31],9:[2,31],10:[2,31],11:[2,31],14:[2,31],17:[2,31],18:[2,31],19:[2,31],21:[2,31],23:[2,31],24:[2,31],25:[2,31],28:[2,31],33:[2,31],35:[2,31],37:[2,31],39:[2,31],41:[2,31],42:[2,31],43:[2,31],44:[2,31],47:[2,31],48:[2,31],49:[2,31],50:[1,75],51:[1,76],52:[1,77],54:[2,31],55:[2,31],57:[2,31],58:[2,31],59:[2,31],62:[2,31],63:[2,31],64:[2,31],65:[2,31],67:[2,31],68:[2,31],71:[2,31],72:[2,31],74:[2,31],75:[2,31],77:[2,31]},{4:[2,41],5:[2,41],6:[2,41],7:[2,41],9:[2,41],10:[2,41],11:[2,41],14:[2,41],17:[2,41],18:[2,41],19:[2,41],21:[2,41],23:[2,41],24:[2,41],25:[2,41],28:[2,41],33:[2,41],35:[2,41],37:[2,41],39:[2,41],41:[2,41],42:[2,41],43:[2,41],44:[2,41],47:[1,78],48:[1,79],49:[1,80],50:[2,41],51:[2,41],52:[2,41],54:[2,41],55:[2,41],57:[2,41],58:[2,41],59:[2,41],62:[2,41],63:[2,41],64:[2,41],65:[2,41],67:[2,41],68:[2,41],71:[2,41],72:[2,41],74:[2,41],75:[2,41],77:[2,41]},{4:[2,37],5:[2,37],6:[2,37],7:[2,37],9:[2,37],10:[2,37],11:[2,37],14:[2,37],17:[2,37],18:[2,37],19:[2,37],21:[2,37],23:[2,37],24:[2,37],25:[2,37],28:[2,37],33:[2,37],35:[2,37],37:[2,37],39:[2,37],41:[2,37],42:[2,37],43:[2,37],44:[2,37],47:[2,37],48:[2,37],49:[2,37],50:[2,37],51:[2,37],52:[2,37],54:[2,37],55:[2,37],57:[2,37],58:[2,37],59:[2,37],62:[2,37],63:[2,37],64:[2,37],65:[2,37],67:[2,37],68:[2,37],71:[2,37],72:[2,37],74:[2,37],75:[2,37],77:[2,37]},{1:[2,7]},{4:[2,19],5:[2,19],6:[2,19],7:[2,19],10:[2,19],11:[2,19],14:[2,19],17:[2,19],19:[2,19],21:[2,19],23:[2,19],24:[2,19],25:[2,19],28:[2,19],57:[2,19],58:[2,19],59:[2,19],62:[2,19],64:[2,19],65:[2,19],67:[2,19],68:[2,19],71:[2,19],72:[2,19],74:[2,19],75:[2,19],77:[2,19]},{4:[2,79],5:[2,79],6:[2,79],7:[2,79],10:[2,79],11:[2,79],14:[2,79],17:[2,79],19:[2,79],21:[2,79],23:[2,79],24:[2,79],25:[2,79],28:[2,79],57:[2,79],58:[2,79],59:[2,79],62:[2,79],64:[2,79],65:[2,79],67:[2,79],68:[2,79],71:[2,79],72:[2,79],74:[2,79],75:[2,79],77:[2,79]},{4:[2,20],5:[2,20],6:[2,20],7:[2,20],10:[2,20],11:[2,20],14:[2,20],17:[2,20],19:[2,20],21:[2,20],23:[2,20],24:[2,20],25:[2,20],28:[2,20],55:[1,81],57:[2,20],58:[2,20],59:[2,20],62:[2,20],64:[2,20],65:[2,20],67:[2,20],68:[2,20],71:[2,20],72:[2,20],74:[2,20],75:[2,20],77:[2,20]},{4:[2,51],5:[2,51],6:[2,51],7:[2,51],9:[2,51],10:[2,51],11:[2,51],14:[2,51],17:[2,51],18:[2,51],19:[2,51],21:[2,51],23:[2,51],24:[2,51],25:[2,51],28:[2,51],33:[2,51],35:[2,51],37:[2,51],39:[2,51],41:[2,51],42:[2,51],43:[2,51],44:[2,51],47:[2,51],48:[2,51],49:[2,51],50:[2,51],51:[2,51],52:[2,51],54:[2,51],55:[2,51],57:[2,51],58:[2,51],59:[2,51],62:[2,51],63:[2,51],64:[2,51],65:[2,51],67:[2,51],68:[2,51],71:[2,51],72:[2,51],74:[2,51],75:[2,51],77:[2,51]},{18:[1,82]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:83,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{63:[1,84]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:85,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],65:[1,86],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,64],5:[2,64],6:[2,64],7:[2,64],10:[2,64],11:[2,64],14:[2,64],17:[2,64],19:[2,64],21:[2,64],23:[2,64],24:[2,64],25:[2,64],28:[2,64],57:[2,64],58:[2,64],59:[2,64],62:[2,64],64:[2,64],65:[2,64],67:[2,64],68:[2,64],71:[2,64],72:[2,64],74:[2,64],75:[2,64],77:[2,64]},{4:[2,65],5:[2,65],6:[2,65],7:[2,65],10:[2,65],11:[2,65],14:[2,65],17:[2,65],19:[2,65],21:[2,65],23:[2,65],24:[2,65],25:[2,65],28:[2,65],57:[2,65],58:[2,65],59:[2,65],62:[2,65],64:[2,65],65:[2,65],67:[2,65],68:[2,65],71:[2,65],72:[2,65],74:[2,65],75:[2,65],77:[2,65]},{4:[2,66],5:[2,66],6:[2,66],7:[2,66],10:[2,66],11:[2,66],14:[2,66],17:[2,66],19:[2,66],21:[2,66],23:[2,66],24:[2,66],25:[2,66],28:[2,66],57:[2,66],58:[2,66],59:[2,66],62:[2,66],64:[2,66],65:[2,66],67:[2,66],68:[2,66],71:[2,66],72:[2,66],74:[2,66],75:[2,66],77:[2,66]},{7:[1,87]},{7:[1,88]},{4:[2,72],5:[2,72],6:[2,72],7:[2,72],10:[2,72],11:[2,72],14:[2,72],17:[2,72],19:[2,72],21:[2,72],23:[2,72],24:[2,72],25:[2,72],28:[2,72],57:[2,72],58:[2,72],59:[2,72],62:[2,72],64:[2,72],65:[2,72],67:[2,72],68:[2,72],71:[2,72],72:[2,72],74:[2,72],75:[2,72],77:[2,72]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:89,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:90,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{4:[2,57],5:[2,57],6:[2,57],7:[2,57],10:[2,57],11:[2,57],14:[2,57],17:[2,57],19:[2,57],21:[2,57],23:[2,57],24:[2,57],25:[2,57],28:[2,57],57:[2,57],58:[2,57],59:[2,57],62:[2,57],64:[2,57],65:[2,57],67:[2,57],68:[2,57],71:[2,57],72:[2,57],74:[2,57],75:[2,57],77:[2,57]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],59:[1,91],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,34:92,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],30:94,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,36:95,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:74,9:[1,96],10:[1,38],11:[1,39],29:97,30:98,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{4:[2,49],5:[2,49],6:[2,49],7:[2,49],9:[2,49],10:[2,49],11:[2,49],14:[2,49],17:[2,49],18:[2,49],19:[2,49],21:[2,49],23:[2,49],24:[2,49],25:[2,49],28:[2,49],33:[2,49],35:[2,49],37:[2,49],39:[2,49],41:[2,49],42:[2,49],43:[2,49],44:[2,49],47:[2,49],48:[2,49],49:[2,49],50:[2,49],51:[2,49],52:[2,49],54:[2,49],55:[1,81],57:[2,49],58:[2,49],59:[2,49],62:[2,49],63:[2,49],64:[2,49],65:[2,49],67:[2,49],68:[2,49],71:[2,49],72:[2,49],74:[2,49],75:[2,49],77:[2,49]},{4:[1,99]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,38:100,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,38:101,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,40:102,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,40:103,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,40:104,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,40:105,45:42,46:41,53:30},{9:[1,106]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,45:42,46:107,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,45:42,46:108,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,45:42,46:109,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,45:110,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,45:111,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],32:93,45:112,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],30:113,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:114,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{20:115,21:[1,116]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:117,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],65:[1,118],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,62],5:[2,62],6:[2,62],7:[2,62],10:[2,62],11:[2,62],14:[2,62],17:[2,62],19:[2,62],21:[2,62],23:[2,62],24:[2,62],25:[2,62],28:[2,62],57:[2,62],58:[2,62],59:[2,62],62:[2,62],64:[2,62],65:[2,62],67:[2,62],68:[2,62],71:[2,62],72:[2,62],74:[2,62],75:[2,62],77:[2,62]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],29:119,30:47,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],10:[1,38],11:[1,39],29:120,30:47,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:122,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],59:[1,121],61:7,62:[1,16],65:[1,86],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:123,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],59:[1,124],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{58:[1,125],60:[1,126]},{4:[2,25],5:[2,25],6:[2,25],7:[2,25],9:[2,25],10:[2,25],11:[2,25],14:[2,25],17:[2,25],18:[2,25],19:[2,25],21:[2,25],23:[2,25],24:[2,25],25:[2,25],28:[2,25],33:[2,25],35:[2,25],37:[1,64],39:[2,25],41:[2,25],42:[2,25],43:[2,25],44:[2,25],47:[2,25],48:[2,25],49:[2,25],50:[2,25],51:[2,25],52:[2,25],54:[2,25],55:[2,25],57:[2,25],58:[2,25],59:[2,25],62:[2,25],63:[2,25],64:[2,25],65:[2,25],67:[2,25],68:[2,25],71:[2,25],72:[2,25],74:[2,25],75:[2,25],77:[2,25]},{4:[2,36],5:[2,36],6:[2,36],7:[2,36],9:[2,36],10:[2,36],11:[2,36],14:[2,36],17:[2,36],18:[2,36],19:[2,36],21:[2,36],23:[2,36],24:[2,36],25:[2,36],28:[2,36],33:[2,36],35:[2,36],37:[2,36],39:[2,36],41:[2,36],42:[2,36],43:[2,36],44:[2,36],47:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],54:[2,36],55:[2,36],57:[2,36],58:[2,36],59:[2,36],62:[2,36],63:[2,36],64:[2,36],65:[2,36],67:[2,36],68:[2,36],71:[2,36],72:[2,36],74:[2,36],75:[2,36],77:[2,36]},{4:[2,23],5:[2,23],6:[2,23],7:[2,23],9:[2,23],10:[2,23],11:[2,23],14:[2,23],17:[2,23],18:[2,23],19:[2,23],21:[2,23],23:[2,23],24:[2,23],25:[2,23],28:[2,23],33:[2,23],35:[2,23],37:[2,23],39:[2,23],41:[2,23],42:[2,23],43:[2,23],44:[2,23],47:[2,23],48:[2,23],49:[2,23],50:[2,23],51:[2,23],52:[2,23],54:[2,23],55:[2,23],57:[2,23],58:[2,23],59:[2,23],62:[2,23],63:[2,23],64:[2,23],65:[2,23],67:[2,23],68:[2,23],71:[2,23],72:[2,23],74:[2,23],75:[2,23],77:[2,23]},{4:[2,27],5:[2,27],6:[2,27],7:[2,27],9:[2,27],10:[2,27],11:[2,27],14:[2,27],17:[2,27],18:[2,27],19:[2,27],21:[2,27],23:[2,27],24:[2,27],25:[2,27],28:[2,27],33:[1,68],35:[2,27],37:[2,27],39:[1,69],41:[2,27],42:[2,27],43:[2,27],44:[2,27],47:[2,27],48:[2,27],49:[2,27],50:[2,27],51:[2,27],52:[2,27],54:[2,27],55:[2,27],57:[2,27],58:[2,27],59:[2,27],62:[2,27],63:[2,27],64:[2,27],65:[2,27],67:[2,27],68:[2,27],71:[2,27],72:[2,27],74:[2,27],75:[2,27],77:[2,27]},{4:[2,47],5:[2,47],6:[2,47],7:[2,47],9:[2,47],10:[2,47],11:[2,47],14:[2,47],17:[2,47],18:[2,47],19:[2,47],21:[2,47],23:[2,47],24:[2,47],25:[2,47],28:[2,47],33:[2,47],35:[2,47],37:[2,47],39:[2,47],41:[2,47],42:[2,47],43:[2,47],44:[2,47],47:[2,47],48:[2,47],49:[2,47],50:[2,47],51:[2,47],52:[2,47],54:[2,47],55:[2,47],57:[2,47],58:[2,47],59:[2,47],62:[2,47],63:[2,47],64:[2,47],65:[2,47],67:[2,47],68:[2,47],71:[2,47],72:[2,47],74:[2,47],75:[2,47],77:[2,47]},{9:[1,127],55:[1,81]},{9:[2,51],55:[2,51]},{4:[2,50],5:[2,50],6:[2,50],7:[2,50],9:[2,50],10:[2,50],11:[2,50],14:[2,50],17:[2,50],18:[2,50],19:[2,50],21:[2,50],23:[2,50],24:[2,50],25:[2,50],28:[2,50],33:[2,50],35:[2,50],37:[2,50],39:[2,50],41:[2,50],42:[2,50],43:[2,50],44:[2,50],47:[2,50],48:[2,50],49:[2,50],50:[2,50],51:[2,50],52:[2,50],54:[2,50],55:[2,50],57:[2,50],58:[2,50],59:[2,50],62:[2,50],63:[2,50],64:[2,50],65:[2,50],67:[2,50],68:[2,50],71:[2,50],72:[2,50],74:[2,50],75:[2,50],77:[2,50]},{4:[2,29],5:[2,29],6:[2,29],7:[2,29],9:[2,29],10:[2,29],11:[2,29],14:[2,29],17:[2,29],18:[2,29],19:[2,29],21:[2,29],23:[2,29],24:[2,29],25:[2,29],28:[2,29],33:[2,29],35:[2,29],37:[2,29],39:[2,29],41:[1,70],42:[1,71],43:[1,72],44:[1,73],47:[2,29],48:[2,29],49:[2,29],50:[2,29],51:[2,29],52:[2,29],54:[2,29],55:[2,29],57:[2,29],58:[2,29],59:[2,29],62:[2,29],63:[2,29],64:[2,29],65:[2,29],67:[2,29],68:[2,29],71:[2,29],72:[2,29],74:[2,29],75:[2,29],77:[2,29]},{4:[2,30],5:[2,30],6:[2,30],7:[2,30],9:[2,30],10:[2,30],11:[2,30],14:[2,30],17:[2,30],18:[2,30],19:[2,30],21:[2,30],23:[2,30],24:[2,30],25:[2,30],28:[2,30],33:[2,30],35:[2,30],37:[2,30],39:[2,30],41:[1,70],42:[1,71],43:[1,72],44:[1,73],47:[2,30],48:[2,30],49:[2,30],50:[2,30],51:[2,30],52:[2,30],54:[2,30],55:[2,30],57:[2,30],58:[2,30],59:[2,30],62:[2,30],63:[2,30],64:[2,30],65:[2,30],67:[2,30],68:[2,30],71:[2,30],72:[2,30],74:[2,30],75:[2,30],77:[2,30]},{4:[2,32],5:[2,32],6:[2,32],7:[2,32],9:[2,32],10:[2,32],11:[2,32],14:[2,32],17:[2,32],18:[2,32],19:[2,32],21:[2,32],23:[2,32],24:[2,32],25:[2,32],28:[2,32],33:[2,32],35:[2,32],37:[2,32],39:[2,32],41:[2,32],42:[2,32],43:[2,32],44:[2,32],47:[2,32],48:[2,32],49:[2,32],50:[1,75],51:[1,76],52:[1,77],54:[2,32],55:[2,32],57:[2,32],58:[2,32],59:[2,32],62:[2,32],63:[2,32],64:[2,32],65:[2,32],67:[2,32],68:[2,32],71:[2,32],72:[2,32],74:[2,32],75:[2,32],77:[2,32]},{4:[2,33],5:[2,33],6:[2,33],7:[2,33],9:[2,33],10:[2,33],11:[2,33],14:[2,33],17:[2,33],18:[2,33],19:[2,33],21:[2,33],23:[2,33],24:[2,33],25:[2,33],28:[2,33],33:[2,33],35:[2,33],37:[2,33],39:[2,33],41:[2,33],42:[2,33],43:[2,33],44:[2,33],47:[2,33],48:[2,33],49:[2,33],50:[1,75],51:[1,76],52:[1,77],54:[2,33],55:[2,33],57:[2,33],58:[2,33],59:[2,33],62:[2,33],63:[2,33],64:[2,33],65:[2,33],67:[2,33],68:[2,33],71:[2,33],72:[2,33],74:[2,33],75:[2,33],77:[2,33]},{4:[2,34],5:[2,34],6:[2,34],7:[2,34],9:[2,34],10:[2,34],11:[2,34],14:[2,34],17:[2,34],18:[2,34],19:[2,34],21:[2,34],23:[2,34],24:[2,34],25:[2,34],28:[2,34],33:[2,34],35:[2,34],37:[2,34],39:[2,34],41:[2,34],42:[2,34],43:[2,34],44:[2,34],47:[2,34],48:[2,34],49:[2,34],50:[1,75],51:[1,76],52:[1,77],54:[2,34],55:[2,34],57:[2,34],58:[2,34],59:[2,34],62:[2,34],63:[2,34],64:[2,34],65:[2,34],67:[2,34],68:[2,34],71:[2,34],72:[2,34],74:[2,34],75:[2,34],77:[2,34]},{4:[2,35],5:[2,35],6:[2,35],7:[2,35],9:[2,35],10:[2,35],11:[2,35],14:[2,35],17:[2,35],18:[2,35],19:[2,35],21:[2,35],23:[2,35],24:[2,35],25:[2,35],28:[2,35],33:[2,35],35:[2,35],37:[2,35],39:[2,35],41:[2,35],42:[2,35],43:[2,35],44:[2,35],47:[2,35],48:[2,35],49:[2,35],50:[1,75],51:[1,76],52:[1,77],54:[2,35],55:[2,35],57:[2,35],58:[2,35],59:[2,35],62:[2,35],63:[2,35],64:[2,35],65:[2,35],67:[2,35],68:[2,35],71:[2,35],72:[2,35],74:[2,35],75:[2,35],77:[2,35]},{4:[2,4],5:[2,4],6:[2,4],7:[2,4],9:[2,4],10:[2,4],11:[2,4],14:[2,4],17:[2,4],18:[2,4],19:[2,4],21:[2,4],23:[2,4],24:[2,4],25:[2,4],28:[2,4],33:[2,4],35:[2,4],37:[2,4],39:[2,4],41:[2,4],42:[2,4],43:[2,4],44:[2,4],47:[2,4],48:[2,4],49:[2,4],50:[2,4],51:[2,4],52:[2,4],54:[2,4],55:[2,4],57:[2,4],58:[2,4],59:[2,4],62:[2,4],63:[2,4],64:[2,4],65:[2,4],67:[2,4],68:[2,4],71:[2,4],72:[2,4],74:[2,4],75:[2,4],77:[2,4]},{4:[2,42],5:[2,42],6:[2,42],7:[2,42],9:[2,42],10:[2,42],11:[2,42],14:[2,42],17:[2,42],18:[2,42],19:[2,42],21:[2,42],23:[2,42],24:[2,42],25:[2,42],28:[2,42],33:[2,42],35:[2,42],37:[2,42],39:[2,42],41:[2,42],42:[2,42],43:[2,42],44:[2,42],47:[1,78],48:[1,79],49:[1,80],50:[2,42],51:[2,42],52:[2,42],54:[2,42],55:[2,42],57:[2,42],58:[2,42],59:[2,42],62:[2,42],63:[2,42],64:[2,42],65:[2,42],67:[2,42],68:[2,42],71:[2,42],72:[2,42],74:[2,42],75:[2,42],77:[2,42]},{4:[2,43],5:[2,43],6:[2,43],7:[2,43],9:[2,43],10:[2,43],11:[2,43],14:[2,43],17:[2,43],18:[2,43],19:[2,43],21:[2,43],23:[2,43],24:[2,43],25:[2,43],28:[2,43],33:[2,43],35:[2,43],37:[2,43],39:[2,43],41:[2,43],42:[2,43],43:[2,43],44:[2,43],47:[1,78],48:[1,79],49:[1,80],50:[2,43],51:[2,43],52:[2,43],54:[2,43],55:[2,43],57:[2,43],58:[2,43],59:[2,43],62:[2,43],63:[2,43],64:[2,43],65:[2,43],67:[2,43],68:[2,43],71:[2,43],72:[2,43],74:[2,43],75:[2,43],77:[2,43]},{4:[2,44],5:[2,44],6:[2,44],7:[2,44],9:[2,44],10:[2,44],11:[2,44],14:[2,44],17:[2,44],18:[2,44],19:[2,44],21:[2,44],23:[2,44],24:[2,44],25:[2,44],28:[2,44],33:[2,44],35:[2,44],37:[2,44],39:[2,44],41:[2,44],42:[2,44],43:[2,44],44:[2,44],47:[1,78],48:[1,79],49:[1,80],50:[2,44],51:[2,44],52:[2,44],54:[2,44],55:[2,44],57:[2,44],58:[2,44],59:[2,44],62:[2,44],63:[2,44],64:[2,44],65:[2,44],67:[2,44],68:[2,44],71:[2,44],72:[2,44],74:[2,44],75:[2,44],77:[2,44]},{4:[2,38],5:[2,38],6:[2,38],7:[2,38],9:[2,38],10:[2,38],11:[2,38],14:[2,38],17:[2,38],18:[2,38],19:[2,38],21:[2,38],23:[2,38],24:[2,38],25:[2,38],28:[2,38],33:[2,38],35:[2,38],37:[2,38],39:[2,38],41:[2,38],42:[2,38],43:[2,38],44:[2,38],47:[2,38],48:[2,38],49:[2,38],50:[2,38],51:[2,38],52:[2,38],54:[2,38],55:[2,38],57:[2,38],58:[2,38],59:[2,38],62:[2,38],63:[2,38],64:[2,38],65:[2,38],67:[2,38],68:[2,38],71:[2,38],72:[2,38],74:[2,38],75:[2,38],77:[2,38]},{4:[2,39],5:[2,39],6:[2,39],7:[2,39],9:[2,39],10:[2,39],11:[2,39],14:[2,39],17:[2,39],18:[2,39],19:[2,39],21:[2,39],23:[2,39],24:[2,39],25:[2,39],28:[2,39],33:[2,39],35:[2,39],37:[2,39],39:[2,39],41:[2,39],42:[2,39],43:[2,39],44:[2,39],47:[2,39],48:[2,39],49:[2,39],50:[2,39],51:[2,39],52:[2,39],54:[2,39],55:[2,39],57:[2,39],58:[2,39],59:[2,39],62:[2,39],63:[2,39],64:[2,39],65:[2,39],67:[2,39],68:[2,39],71:[2,39],72:[2,39],74:[2,39],75:[2,39],77:[2,39]},{4:[2,40],5:[2,40],6:[2,40],7:[2,40],9:[2,40],10:[2,40],11:[2,40],14:[2,40],17:[2,40],18:[2,40],19:[2,40],21:[2,40],23:[2,40],24:[2,40],25:[2,40],28:[2,40],33:[2,40],35:[2,40],37:[2,40],39:[2,40],41:[2,40],42:[2,40],43:[2,40],44:[2,40],47:[2,40],48:[2,40],49:[2,40],50:[2,40],51:[2,40],52:[2,40],54:[2,40],55:[2,40],57:[2,40],58:[2,40],59:[2,40],62:[2,40],63:[2,40],64:[2,40],65:[2,40],67:[2,40],68:[2,40],71:[2,40],72:[2,40],74:[2,40],75:[2,40],77:[2,40]},{4:[2,52],5:[2,52],6:[2,52],7:[2,52],9:[2,52],10:[2,52],11:[2,52],14:[2,52],17:[2,52],18:[2,52],19:[2,52],21:[2,52],23:[2,52],24:[2,52],25:[2,52],28:[2,52],33:[2,52],35:[2,52],37:[2,52],39:[2,52],41:[2,52],42:[2,52],43:[2,52],44:[2,52],47:[2,52],48:[2,52],49:[2,52],50:[2,52],51:[2,52],52:[2,52],54:[2,52],55:[2,52],57:[2,52],58:[2,52],59:[2,52],62:[2,52],63:[2,52],64:[2,52],65:[2,52],67:[2,52],68:[2,52],71:[2,52],72:[2,52],74:[2,52],75:[2,52],77:[2,52]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],15:129,16:130,17:[1,131],19:[1,132],22:6,23:[1,14],24:[1,128],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{21:[1,134],24:[1,133]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:135,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:136,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,61],5:[2,61],6:[2,61],7:[2,61],10:[2,61],11:[2,61],14:[2,61],17:[2,61],19:[2,61],21:[2,61],23:[2,61],24:[2,61],25:[2,61],28:[2,61],57:[2,61],58:[2,61],59:[2,61],62:[2,61],64:[2,61],65:[2,61],67:[2,61],68:[2,61],71:[2,61],72:[2,61],74:[2,61],75:[2,61],77:[2,61]},{9:[1,137],55:[1,81]},{9:[1,138],55:[1,81]},{4:[2,53],5:[2,53],6:[2,53],7:[2,53],10:[2,53],11:[2,53],14:[2,53],17:[2,53],19:[2,53],21:[2,53],23:[2,53],24:[2,53],25:[2,53],28:[2,53],57:[2,53],58:[2,53],59:[2,53],62:[2,53],64:[2,53],65:[2,53],67:[2,53],68:[2,53],71:[2,53],72:[2,53],74:[2,53],75:[2,53],77:[2,53]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],59:[1,139],61:7,62:[1,16],65:[1,118],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],59:[1,140],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,56],5:[2,56],6:[2,56],7:[2,56],10:[2,56],11:[2,56],14:[2,56],17:[2,56],19:[2,56],21:[2,56],23:[2,56],24:[2,56],25:[2,56],28:[2,56],57:[2,56],58:[2,56],59:[2,56],62:[2,56],64:[2,56],65:[2,56],67:[2,56],68:[2,56],71:[2,56],72:[2,56],74:[2,56],75:[2,56],77:[2,56]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:141,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:142,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{4:[2,48],5:[2,48],6:[2,48],7:[2,48],9:[2,48],10:[2,48],11:[2,48],14:[2,48],17:[2,48],18:[2,48],19:[2,48],21:[2,48],23:[2,48],24:[2,48],25:[2,48],28:[2,48],33:[2,48],35:[2,48],37:[2,48],39:[2,48],41:[2,48],42:[2,48],43:[2,48],44:[2,48],47:[2,48],48:[2,48],49:[2,48],50:[2,48],51:[2,48],52:[2,48],54:[2,48],55:[2,48],57:[2,48],58:[2,48],59:[2,48],62:[2,48],63:[2,48],64:[2,48],65:[2,48],67:[2,48],68:[2,48],71:[2,48],72:[2,48],74:[2,48],75:[2,48],77:[2,48]},{23:[1,143]},{24:[1,144]},{24:[2,8]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:145,10:[1,38],11:[1,39],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:146,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{25:[1,147]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:148,10:[1,38],11:[1,39],19:[1,149],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:150,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],64:[1,151],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:152,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:153,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,54],5:[2,54],6:[2,54],7:[2,54],10:[2,54],11:[2,54],14:[2,54],17:[2,54],19:[2,54],21:[2,54],23:[2,54],24:[2,54],25:[2,54],28:[2,54],57:[2,54],58:[2,54],59:[2,54],62:[2,54],64:[2,54],65:[2,54],67:[2,54],68:[2,54],71:[2,54],72:[2,54],74:[2,54],75:[2,54],77:[2,54]},{4:[2,55],5:[2,55],6:[2,55],7:[2,55],10:[2,55],11:[2,55],14:[2,55],17:[2,55],19:[2,55],21:[2,55],23:[2,55],24:[2,55],25:[2,55],28:[2,55],57:[2,55],58:[2,55],59:[2,55],62:[2,55],64:[2,55],65:[2,55],67:[2,55],68:[2,55],71:[2,55],72:[2,55],74:[2,55],75:[2,55],77:[2,55]},{4:[2,58],5:[2,58],6:[2,58],7:[2,58],10:[2,58],11:[2,58],14:[2,58],17:[2,58],19:[2,58],21:[2,58],23:[2,58],24:[2,58],25:[2,58],28:[2,58],57:[2,58],58:[2,58],59:[2,58],62:[2,58],64:[2,58],65:[2,58],67:[2,58],68:[2,58],71:[2,58],72:[2,58],74:[2,58],75:[2,58],77:[2,58]},{4:[2,59],5:[2,59],6:[2,59],7:[2,59],10:[2,59],11:[2,59],14:[2,59],17:[2,59],19:[2,59],21:[2,59],23:[2,59],24:[2,59],25:[2,59],28:[2,59],57:[2,59],58:[2,59],59:[2,59],62:[2,59],64:[2,59],65:[2,59],67:[2,59],68:[2,59],71:[2,59],72:[2,59],74:[2,59],75:[2,59],77:[2,59]},{4:[2,15],5:[2,15],6:[2,15],7:[2,15],10:[2,15],11:[2,15],14:[2,15],17:[2,15],19:[2,15],21:[2,15],23:[2,15],24:[2,15],25:[2,15],28:[2,15],57:[2,15],58:[2,15],59:[2,15],62:[2,15],64:[2,15],65:[2,15],67:[2,15],68:[2,15],71:[2,15],72:[2,15],74:[2,15],75:[2,15],77:[2,15]},{23:[1,154]},{18:[1,155]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],24:[2,11],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,17],5:[2,17],6:[2,17],7:[2,17],10:[2,17],11:[2,17],14:[2,17],17:[2,17],19:[2,17],21:[2,17],23:[2,17],24:[2,17],25:[2,17],28:[2,17],57:[2,17],58:[2,17],59:[2,17],62:[2,17],64:[2,17],65:[2,17],67:[2,17],68:[2,17],71:[2,17],72:[2,17],74:[2,17],75:[2,17],77:[2,17]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:156,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:157,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],21:[2,12],22:6,23:[1,14],24:[2,12],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,60],5:[2,60],6:[2,60],7:[2,60],10:[2,60],11:[2,60],14:[2,60],17:[2,60],19:[2,60],21:[2,60],23:[2,60],24:[2,60],25:[2,60],28:[2,60],57:[2,60],58:[2,60],59:[2,60],62:[2,60],64:[2,60],65:[2,60],67:[2,60],68:[2,60],71:[2,60],72:[2,60],74:[2,60],75:[2,60],77:[2,60]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],24:[1,158],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],22:6,23:[1,14],24:[1,159],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,16],5:[2,16],6:[2,16],7:[2,16],10:[2,16],11:[2,16],14:[2,16],17:[2,16],19:[2,16],21:[2,16],23:[2,16],24:[2,16],25:[2,16],28:[2,16],57:[2,16],58:[2,16],59:[2,16],62:[2,16],64:[2,16],65:[2,16],67:[2,16],68:[2,16],71:[2,16],72:[2,16],74:[2,16],75:[2,16],77:[2,16]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],13:160,22:6,23:[1,14],25:[1,15],26:3,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],21:[2,13],22:6,23:[1,14],24:[2,13],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],21:[2,14],22:6,23:[1,14],24:[2,14],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{68:[1,161]},{74:[1,162]},{3:32,4:[1,34],5:[1,35],6:[1,36],7:[1,37],8:13,10:[1,38],11:[1,39],15:163,16:130,17:[1,131],19:[1,132],22:6,23:[1,14],24:[2,9],25:[1,15],26:44,27:4,28:[1,12],30:23,31:27,32:28,34:29,36:31,38:33,40:40,45:42,46:41,53:30,56:18,57:[1,24],58:[1,17],61:7,62:[1,16],66:8,67:[1,19],68:[1,20],69:5,70:22,71:[1,25],72:[1,26],73:9,74:[1,21],75:[1,10],77:[1,11]},{4:[2,70],5:[2,70],6:[2,70],7:[2,70],10:[2,70],11:[2,70],14:[2,70],17:[2,70],19:[2,70],21:[2,70],23:[2,70],24:[2,70],25:[2,70],28:[2,70],57:[2,70],58:[2,70],59:[2,70],62:[2,70],64:[2,70],65:[2,70],67:[2,70],68:[2,70],71:[2,70],72:[2,70],74:[2,70],75:[2,70],77:[2,70]},{4:[2,71],5:[2,71],6:[2,71],7:[2,71],10:[2,71],11:[2,71],14:[2,71],17:[2,71],19:[2,71],21:[2,71],23:[2,71],24:[2,71],25:[2,71],28:[2,71],57:[2,71],58:[2,71],59:[2,71],62:[2,71],64:[2,71],65:[2,71],67:[2,71],68:[2,71],71:[2,71],72:[2,71],74:[2,71],75:[2,71],77:[2,71]},{24:[2,10]}],
defaultActions: {43:[2,7],130:[2,8],163:[2,10]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input) {
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {"flex":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:/* ignore comments */
break;
case 2://
break;
case 3:return 77;
break;
case 4:return 28;
break;
case 5:return 75;
break;
case 6:return 76;
break;
case 7:return 62;
break;
case 8:return 64;
break;
case 9:return 63;
break;
case 10:return 68;
break;
case 11:return 17;
break;
case 12:return 23;
break;
case 13:return 18;
break;
case 14:return 19;
break;
case 15:return 24;
break;
case 16:return 35;
break;
case 17:return 37;
break;
case 18:return 25;
break;
case 19:return 21;
break;
case 20:return 60;
break;
case 21:return 57;
break;
case 22:return 67;
break;
case 23:return 74;
break;
case 24:return 59;
break;
case 25:return 58;
break;
case 26:return 65;
break;
case 27:return 71;
break;
case 28:return 72;
break;
case 29:return 10;
break;
case 30:return 11;
break;
case 31:return 4;
break;
case 32:return 5;
break;
case 33:return 6;
break;
case 34:return 43;
break;
case 35:return 44;
break;
case 36:return 39;
break;
case 37:return 33;
break;
case 38:return 42;
break;
case 39:return 41;
break;
case 40:return 7;
break;
case 41:return 9;
break;
case 42:return 55;
break;
case 43:return 47;
break;
case 44:return 48;
break;
case 45:return 50;
break;
case 46:return 51;
break;
case 47:return 52;
break;
case 48:return 54;
break;
case 49:return 14;
break;
case 50:return 'INVALID';
break;
case 51:console.log(yy_.yytext);
break;
}
},
rules: [/^(?:[ \t\b\r]+)/,/^(?:'.*)/,/^(?:REM.*)/,/^(?:\n)/,/^(?:Dim)/,/^(?:Option)/,/^(?:Explicit)/,/^(?:([Ff])([Oo])([Rr]))/,/^(?:([Nn])([Ee])([Xx])([Tt]))/,/^(?:([Tt])([Oo]))/,/^(?:([Ff])([Uu])([Nn])([Cc])([Tt])([Ii])([Oo])([Nn]))/,/^(?:([Ee])([Ll])([Ss])([Ee])([Ii])([Ff]))/,/^(?:([Ii])([Ff]))/,/^(?:([Tt])([Hh])([Ee])([Nn]))/,/^(?:([Ee])([Ll])([Ss])([Ee]))/,/^(?:([Ee])([Nn])([Dd]))/,/^(?:([Oo])([Rr]))/,/^(?:([Aa])([Nn])([Dd]))/,/^(?:([Ss])([Ee])([Ll])([Ee])([Cc])([Tt]))/,/^(?:([Cc])([Aa])([Ss])([Ee]))/,/^(?:([Uu])([Nn])([Tt])([Ii])([Ll]))/,/^(?:([Dd])([Oo]))/,/^(?:([Ee])([Xx])([Ii])([Tt]))/,/^(?:([Ss])([Uu])([Bb]))/,/^(?:([Ll])([Oo])([Oo])([Pp]))/,/^(?:([Ww])([Hh])([Ii])([Ll])([Ee]))/,/^(?:([Ww])([Ee])([Nn])([Dd]))/,/^(?:([Pp])([Uu])([Bb])([Ll])([Ii])([Cc]))/,/^(?:([Pp])([Rr])([Ii])([Vv])([Aa])([Tt])([Ee]))/,/^(?:True)/,/^(?:False)/,/^(?:[A-Za-z][A-Za-z0-9_]*)/,/^(?:[0-9]+)/,/^(?:"(\\.|[^\\"])*")/,/^(?:<=)/,/^(?:>=)/,/^(?:<>)/,/^(?:=)/,/^(?:>)/,/^(?:<)/,/^(?:\()/,/^(?:\))/,/^(?:,)/,/^(?:\*)/,/^(?:\/)/,/^(?:\+)/,/^(?:-)/,/^(?:&)/,/^(?:\.)/,/^(?:$)/,/^(?:.)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = vbs;
exports.Parser = vbs.Parser;
exports.parse = function () { return vbs.parse.apply(vbs, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}